'Program to test correlation of Pi Fraction coordinates.
'Compiler: PBWIN 10.04.0108 (www.powerbasic.com).

'Last modification: 03-16-2014 ~1900 HRS EST

'(c) Richard A. Formato.  All rights reserved worldwide.
'This source code is FREEWARE.  It may be freely copied,
'distributed and used as long as this copyright notice
'is included without modification and as long as no cost
'or fee is charged to the user, including "bundling" or
'similar fees.  Comments/questions: rf2@ieee.org

#COMPILE EXE
#DIM ALL
%USEMACROS = 1
#INCLUDE "Win32API.inc"
DEFEXT A-Z

GLOBAL PiFractions() AS EXT 'NOTE: Pi Fractions, # fracs, and fraction index are GLOBAL
GLOBAL PiFracIndex&&, IndexIncrement&&, NumPiFractions&&
GLOBAL ScreenWidth&, ScreenHeight&, Quote$

DECLARE FUNCTION RandomInteger&&(n&&,m&&) 'returns random integer I, n=< I < m.
DECLARE FUNCTION RandomNum(a,b)           'returns random number X,  a=< X < b.
DECLARE SUB FillPiFractionArray
DECLARE SUB CreateGNUplotINIfile(PlotWindowULC_X&&,PlotWindowULC_Y&&,PlotWindowWidth&&,PlotWindowHeight&&)
DECLARE SUB TwoDplot(PlotFileName$,PlotTitle$,xCoord$,yCoord$,XaxisLabel$,YaxisLabel$,_
                     LogXaxis$,LogYaxis$,xMin$,xMax$,yMin$,yMax$,xTics$,yTics$,GnuPlotEXE$,LineType$,Annotation$)

'----------------------------------------------------------------------------------------------------------------

FUNCTION PBMAIN () AS LONG
LOCAL Np&&, Nd&&, p&&, i&&, FirstDimNum&&, SecondDimNum&&, N&&, s1$, s2$, s1s2$, DefaultS1S2$, YorN&
LOCAL A$, B$, PlotTitle$, xMin$, xMax$, yMin$, yMax$, NumDims$, OverWritePiFracs$, StartingIndex&&
LOCAL R() AS EXT

    RANDOMIZE TIMER

    DESKTOP GET SIZE TO ScreenWidth&, ScreenHeight&  'get screen size (global variables)
    IF DIR$("wgnuplot.exe") = "" THEN
        MSGBOX("WARNING!  'wgnuplot.exe' not found.  Run terminated.") : EXIT FUNCTION
    END IF
    Quote$ = CHR$(34)

    REDIM PiFractions(1 TO 1)  'NOTE: Sub FillPiFractionArray redims the array
    CALL  FillPiFractionArray  'to the actual number of available fractions
    PiFracIndex&&   = NumPiFractions&&*TIMER/86200## 'Sets a variable starting index computed from when the program is started
                                                     'so that each run uses a different set of fractions.  If the same set is
                                                     'desired on succesive runs, set PiFracIndex& = constant of choice.
    OverWritePiFracs$ ="NO"
    YorN& = MSGBOX("Overwrite Pi Fraction array with"+$CRLF+_
                   "pseudorandom (PR) numbers generated by"+$CRLF+_
                   "the compiler using TIMER seed?"+$CRLF+_
                   "Compares Pi Fraction correlation"+$CRLF+_
                   "plots to pseudorandom sequences."+$CRLF,%MB_YESNO+%MB_DEFBUTTON2,"USE PSEUDORANDOM #s INSTEAD")
    A$ = "Pi Fraction index initialized using computer's clock"
    IF YorN& = %IDYES THEN
        OverWritePiFracs$ = "YES"
        A$ = "Pseudorandom array index initialized using computer's clock"
        FOR i&& = 1 TO NumPiFractions&&
            PiFractions(i&&) = RND
        NEXT i&&
    END IF

    YorN& = MSGBOX("Use the computer clock to initialize"+$CRLF+_
                   "the Pi Fraction/PR index? 'Yes' randomizes"+$CRLF+_
                   "the index using the time at which this"+$CRLF+_
                   "program was started.  'No' sets the"+$CRLF+_
                   "initial index to 1, and every run with"+$CRLF+_
                   "this option will use the same set of"+$CRLF+_
                   "Pi Fractions.",%MB_YESNO,"STARTING PI FRACTION/PR INDEX")
    IF YorN& = %IDNO THEN
        PiFracIndex&&   = 1 : A$ = "Pi Fraction/PR index initialized to 1"  'A$ = "Pi Fraction index initialized to 1"
    END IF
    StartingIndex&& = PiFracIndex&&

    s1$ = "-999" : DefaultS1S2$ = "2"
    DO UNTIL VAL(s1$) >= 1 AND VAL(s1$) =< NumPiFractions&&
         s1$ = INPUTBOX$("Pi Fraction/PR Index Increment"+$CRLF+$CRLF+_
                         "[1-"+REMOVE$(STR$(NumPiFractions&&),ANY" ")+"]","INDEX INCREMENT",DefaultS1S2$)
    LOOP
    IndexIncrement&& = VAL(s1$)
    A$ = "["+A$+", starting index"+STR$(StartingIndex&&)+" with index increment of"+STR$(IndexIncrement&&)+"]"

    s1$ = "-999" : s2$ = "-999" : DefaultS1S2$ = "30 1000"
    DO UNTIL VAL(s1$) >= 1 AND VAL(s1$) =< 100 AND VAL(s2$) >= 1 AND VAL(s2$) =< 20000
         s1s2$ = INPUTBOX$("# Dimensions and # Data"+$CRLF+"Points to Plot"+$CRLF+_
                           "(separated by a space) "+$CRLF+$CRLF+_
                           "[1-100, 1-20000]","Nd & Np",DefaultS1S2$)
         s1$   = PARSE$(s1s2$,ANY" ./:-_",1)
         s2$   = PARSE$(s1s2$,ANY" ./:-_",2)
    LOOP
    Nd&&     = VAL(s1$) : Np&& = VAL(s2$)
    NumDims$ = REMOVE$(STR$(Nd&&),ANY" ")

    REDIM R(1 TO Np&&, 1 TO Nd&&)
    FOR p&& = 1 TO Np&&
        FOR i&& = 1 TO Nd&&
            IF PiFracIndex&& > NumPiFractions&& THEN PiFracIndex&& = 1
            R(p&&,i&&)       = RandomNum(0##,1##)
        NEXT i&&
    NEXT p&&

    s1$ = "-999" : s2$ = "-999" : DefaultS1S2$ = REMOVE$(STR$(MAX(1,Nd&&-1)),ANY" ")+" "+REMOVE$(STR$(Nd&&),ANY" ")
    DO UNTIL VAL(s1$) >= 1 AND VAL(s1$) =< Nd&& AND VAL(s2$) >= 1 AND VAL(s2$) =< Nd&&
         s1s2$ = INPUTBOX$("1st and 2nd Dimensions to"+$CRLF+_
                           "Plot (separated by a space)"+$CRLF+$CRLF+_
                           "[1-"+NumDims$+", 1-"+NumDims$+"]","PLOTTED COORDINATES",DefaultS1S2$)
         s1$   = PARSE$(s1s2$,ANY" ./:-_",1)
         s2$   = PARSE$(s1s2$,ANY" ./:-_",2)
    LOOP
    FirstDimNum&& = VAL(s1$) : SecondDimNum&& = VAL(s2$)

'-------------------------------------------------------------------------------
    B$ = "Pi FRACTION "
    IF OverWritePiFracs$ = "YES" THEN B$ = "PSEUDORANDOM "'change plot title
    PlotTitle$    = B$+"POINTS IN "+REMOVE$(STR$(Nd&&),ANY" ")+" DIMENSIONS, "+_
                    REMOVE$(STR$(Np&&),ANY" ")+" POINTS.\n"+_
                    "Plot of dimensions "+REMOVE$(STR$(FirstDimNum&&),ANY" ")+_
                    " and "+REMOVE$(STR$(SecondDimNum&&),ANY" ")+".\n"+A$
'-------------------------------------------------------------------------------

    N&& = FREEFILE
    OPEN "PiFracTst.DAT" FOR OUTPUT AS #N&&
        FOR p&& = 1 TO Np&&
            PRINT #N&&, USING$("#.#####  #.#####",R(p&&,FirstDimNum&&),R(p&&,SecondDimNum&&))
        NEXT p&&
    CLOSE #N&&

    MSGBOX("Plot data file 'PiFracTst.DAT' has been created.")

    CALL CreateGNUplotINIfile(350,20,1000,1000)
    CALL TwoDplot("PiFracTst.DAT",PlotTitle$,"0.6","0.7","x"+REMOVE$(STR$(FirstDimNum&&),ANY" ")+_
                  "\n\n","\nx"+REMOVE$(STR$(SecondDimNum&&),ANY" ")+"","NO","NO",_
                  xMin$,xMax$,yMin$,yMax$,"5","5","wgnuplot.exe"," pointsize 1 linewidth 2","")
END FUNCTION 'PBMAIN()

'-----------------------

FUNCTION RandomNum(a,b) 'returns random number X, a=< X < b.
'<<<<< note: NumPiFractions&&, PiFractions(), PiFracIndex&& are GLOBAL >>>>>
    IF a > b THEN SWAP a, b
    RandomNum        = a + (b-a)*PiFractions(PiFracIndex&&)
    PiFracIndex&&    = PiFracIndex&& + IndexIncrement&&
    IF PiFracIndex&& > NumPiFractions&& THEN PiFracIndex&& = 1
END FUNCTION 'RandomNum()

'------------------------

FUNCTION RandomInteger&&(n&&,m&&) 'returns random integer I, n=< I < m.
    IF n&& > m&& THEN SWAP n&&, m&&
    RandomInteger&&  = n&& + (m&&-n&&)*PiFractions(PiFracIndex&&)
    PiFracIndex&&    = PiFracIndex&& + IndexIncrement&&
    IF PiFracIndex&& > NumPiFractions&& THEN PiFracIndex&& = 1
END FUNCTION 'RandomInteger&&()

'------------------------------

SUB FillPiFractionArray
LOCAL N&&, idx&&, Dum$
    IF DIR$("PiFracSUB_215830.DAT") = "" THEN MSGBOX("ERROR!  Pi Frac data file not found!")
    N&& = FREEFILE : OPEN "PiFracSUB_215830.DAT" FOR INPUT AS #N&&
        IF(LOF(N&&)<>2589968) THEN
            MSGBOX("Data file is corrupted!")
        ELSE
            MSGBOX("Data file is "+STR$(LOF(N&&))+" bytes.")
        END IF
        INPUT #N&&, NumPiFractions&&
        REDIM PiFractions(1 TO NumPiFractions&&) 'NOTE FRACTIONS NUMBERED 1 TO #FRACS INSTEAD OF STARTING AT ZERO!
        FOR idx&& = 1 TO NumPiFractions&&
            INPUT #N&&, Dum$
            IF idx&& = 1      AND Dum$ <> "0.141592##" THEN MSGBOX("Error in Pi Frac #1!")
            IF idx&& = 215830 AND Dum$ <> "0.203267##" THEN MSGBOX("Error in Pi Frac #215830!")
            PiFractions(idx&&) = VAL(Dum$)
        NEXT idx&&
    CLOSE #N&&
    MSGBOX("# Pi Fractions is "+STR$(NumPiFractions&&)+".")
END SUB

'------

SUB TwoDplot(PlotFileName$,PlotTitle$,xCoord$,yCoord$,XaxisLabel$,YaxisLabel$, _
             LogXaxis$,LogYaxis$,xMin$,xMax$,yMin$,yMax$,xTics$,yTics$,GnuPlotEXE$,LineType$,Annotation$)
LOCAL N&&, ProcessID???
    N&& = FREEFILE
    OPEN "cmd2d.gp" FOR OUTPUT AS #N&&
        IF LogXaxis$ = "YES" AND LogYaxis$ = "NO"  THEN PRINT #N&&, "set logscale x"
        IF LogXaxis$ = "NO"  AND LogYaxis$ = "YES" THEN PRINT #N&&, "set logscale y"
        IF LogXaxis$ = "YES" AND LogYaxis$ = "YES" THEN PRINT #N&&, "set logscale xy"
        IF xMin$ <> "" AND xMax$ <> "" THEN  PRINT #N&&, "set xrange ["+xMin$+":"+xMax$+"]"
        IF yMin$ <> "" AND yMax$ <> "" THEN  PRINT #N&&, "set yrange ["+yMin$+":"+yMax$+"]"
        PRINT #N&&, "set label "      + Quote$ + Annotation$ + Quote$ + " at graph " + xCoord$ + "," + yCoord$
        PRINT #N&&, "set grid xtics " + XTics$
        PRINT #N&&, "set grid ytics " + yTics$
        PRINT #N&&, "set grid mxtics"
        PRINT #N&&, "set grid mytics"
        PRINT #N&&, "show grid"
        PRINT #N&&, "set title "  + Quote$+PlotTitle$+Quote$
        PRINT #N&&, "set xlabel " + Quote$+XaxisLabel$+Quote$
        PRINT #N&&, "set ylabel " + Quote$+YaxisLabel$+Quote$
        PRINT #N&&, "plot "+Quote$+PlotFileName$+Quote$+" notitle"+LineType$
    CLOSE #N&&
    ProcessID??? = SHELL(GnuPlotEXE$+" cmd2d.gp -")' : CALL Delay(0.5##)
END SUB 'TwoDplot()

'---------------------

SUB CreateGNUplotINIfile(PlotWindowULC_X&&,PlotWindowULC_Y&&,PlotWindowWidth&&,PlotWindowHeight&&)
LOCAL N&&, WinPath$, A$, B$, WindowsDirectory$
    WinPath$ = UCASE$(ENVIRON$("Path"))'DIR$("C:\WINDOWS",23)
    DO
        B$ = A$
        A$ = EXTRACT$(WinPath$,";")
        WinPath$ = REMOVE$(WinPath$,A$+";")
        IF RIGHT$(A$,7) = "WINDOWS" OR A$ = B$ THEN EXIT LOOP
        IF RIGHT$(A$,5) = "WINNT"   OR A$ = B$ THEN EXIT LOOP
    LOOP
    WindowsDirectory$ = A$
    N&& = FREEFILE
'   ----------- WGNUPLOT.INPUT FILE -----------
    OPEN WindowsDirectory$+"\wgnuplot.ini" FOR OUTPUT AS #N&&
        PRINT #N&&,"[WGNUPLOT]"
        PRINT #N&&,"TextOrigin=0 0"
        PRINT #N&&,"TextSize=640 150"
        PRINT #N&&,"TextFont=Terminal,9"
        PRINT #N&&,"GraphOrigin="+REMOVE$(STR$(PlotWindowULC_X&&),ANY" ")+" "+REMOVE$(STR$(PlotWindowULC_Y&&),ANY" ")
        PRINT #N&&,"GraphSize="  +REMOVE$(STR$(PlotWindowWidth&&),ANY" ")+" "+REMOVE$(STR$(PlotWindowHeight&&),ANY" ")
        PRINT #N&&,"GraphFont=Arial,10"
        PRINT #N&&,"GraphColor=1"
        PRINT #N&&,"GraphToTop=1"
        PRINT #N&&,"GraphBackground=255 255 255"
        PRINT #N&&,"Border=0 0 0 0 0"
        PRINT #N&&,"Axis=192 192 192 2 2"
        PRINT #N&&,"Line1=0 0 255 0 0"
        PRINT #N&&,"Line2=0 255 0 0 1"
        PRINT #N&&,"Line3=255 0 0 0 2"
        PRINT #N&&,"Line4=255 0 255 0 3"
        PRINT #N&&,"Line5=0 0 128 0 4"
    CLOSE #N&&
END SUB 'CreateGNUplotINIfile()

'------------------------------------------------ END PROGRAM --------------------------------------------
